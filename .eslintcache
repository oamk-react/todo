[{"/Users/jjuntune/Development/React/todo/src/index.js":"1","/Users/jjuntune/Development/React/todo/src/App.js":"2"},{"size":198,"mtime":1612267377816,"results":"3","hashOfConfig":"4"},{"size":2841,"mtime":1612425534288,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"16y1fue",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/jjuntune/Development/React/todo/src/index.js",[],["12","13"],"/Users/jjuntune/Development/React/todo/src/App.js",["14"],"\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nconst URL = 'http://localhost:8888/todo/';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n\n  useEffect(() => {\n    let status = 0;\n    fetch(URL + 'index.php')\n      .then(res => {\n        status = parseInt(res.status);\n        return res.json()\n      })\n      .then(\n        (res) => {\n          if (status === 200) {\n            setTasks(res);\n          } else {\n            alert(res.error);\n          }\n        }, (error) => {\n          alert(error);\n        }\n      )\n  }, [])\n\n\n  function save(e) {\n    e.preventDefault(); // Prevent form submission.\n    let status = 0; // Define a variable for http status (response from server).\n    fetch(URL + 'add.php', { // Send HTTP post to server and send new task description.\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({ // Pass parameter for POST request here.\n        description: task\n      })\n    })\n    .then(res => { // Sava http response status code and return json from response (so next then statement is receiving data).\n      status = parseInt(res.status);\n      return res.json();\n    })\n    .then(\n      (res) => {\n        if (status === 200) { // If status is ok, update UI.\n          setTasks(tasks => [...tasks, res]);\n          setTask('');\n        } else { // If status code is not ok, there is an error, display error message defined in server.\n          alert(res.error);\n        }\n      }, (error) => { // Catch network errors.\n        alert(error);\n      }\n    )\n  }\n\n  function remove(id) {\n    let status = 0; \n    fetch(URL + 'delete.php', { \n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({ \n        id: id\n      })\n    })\n    .then(res => { \n      status = parseInt(res.status);\n      return res.json();\n    })\n    .then(\n      (res) => {\n        if (status === 200) { \n          const newListWithoutRemoved = tasks.filter((item) => item.id !== id);\n          setTasks(newListWithoutRemoved);\n        } else { \n          alert(res.error);\n        }\n      }, (error) => { \n        alert(error);\n      }\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <h3>Todo list</h3>\n      <div>\n        <form onSubmit={save}>\n          <label>New task</label>\n          <input value={task} onChange={e => setTask(e.target.value)} />\n          <button>Save</button>\n        </form>\n      </div>\n      <ol>\n        {tasks.map(task => (\n          <li key={task.id}>{task.description}<a className=\"delete\" onClick={() => remove(task.id)} href=\"#\">Delete</a></li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":105,"column":47,"nodeType":"21","endLine":105,"endColumn":110},"no-native-reassign",["22"],"no-negated-in-lhs",["23"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]